{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/GlobalStats/GlobalStats.module.css","components/IndiaStats/IndiaStats.module.css","App.module.css","components/Cards/Cards.module.css","api/index.js","constants.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/GlobalStats/GlobalStats.jsx","components/IndiaStats/IndiaStats.jsx","images/corona.jpg","components/Menu/Menu.js","App.js","webpack:///./src/index.js?b635"],"names":["module","exports","url","urlIndiaTotalData","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","fetchIndiaStates","localStorage","setItem","JSON","stringify","Object","keys","stateCode","fetchIndiaData","state","INDdataInStorage","parse","getItem","APIStateDates","length","deceased","tested","log","dailyConfirm","dailyDeceased","dailyRecovered","dailyTested","STATE_NAMES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","TT","Chart","IndState","useState","setDailyData","setDailyIndiaData","useEffect","fetchAPI","fetchIndiaAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","Grid","className","styles","container","Cards","item","component","Card","xs","cx","card","infected","CardContent","style","Typography","color","gutterBottom","variant","start","end","duration","seperator","Date","toDateString","CountryPicker","handleCountryChange","handleStateChange","Region","fetchedCountries","setFetchedCountries","fetchedIndiaStates","setFetchedIndiaStates","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","GlobalStats","setData","setCountry","fetchedData","IndiaStats","setState","withRouter","props","openMenu","setOpenMenu","optionClicked","setOptionClicked","isDarkMode","setIsDarkMode","setClassNames","num","classArr","push","join","currentRoute","window","location","pathname","pushToRoute","routeTopush","history","onClick","width","marginTop","alt","src","coronaImage","checked","size","App","justifyContent","flexDirection","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91763a2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2dVLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2lHwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GlobalStats_container__1q5Pi\",\"image\":\"GlobalStats_image__1iOU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaStats_container__3z5hb\",\"image\":\"IndiaStats_image__27X_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___FWUB\",\"image\":\"App_image__3fEfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1SgbK\",\"card\":\"Cards_card__18VTY\",\"infected\":\"Cards_infected__33UAh\",\"recovered\":\"Cards_recovered__J-HP2\",\"deaths\":\"Cards_deaths__9LS0D\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst urlIndiaTotalData = `${url}/countries/India`;\r\nconst urlIndiaStatesData = `https://api.covid19india.org/v4/min/timeseries.min.json`;\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error while fetching data ${error}`);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchIndiaStates = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${urlIndiaStatesData}`);\r\n\r\n    localStorage.setItem(\"IndiaStats\", JSON.stringify(data));\r\n\r\n    return Object.keys(data).map((stateCode) => stateCode);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchIndiaData = async (state) => {\r\n  try {\r\n    if (state) {\r\n      const INDdataInStorage = JSON.parse(localStorage.getItem(\"IndiaStats\"));\r\n\r\n      const APIStateDates = INDdataInStorage[state][\"dates\"];\r\n      const keys = Object.keys(APIStateDates);\r\n      const lastUpdate = keys[keys.length - 1];\r\n\r\n      const { confirmed, deceased, recovered, tested } = APIStateDates[\r\n        lastUpdate\r\n      ][\"total\"];\r\n\r\n      console.log(\r\n        `Total data in ${state} is ${APIStateDates[lastUpdate][\"total\"]}`\r\n      );\r\n\r\n      console.log(\r\n        `Delta data in ${state} is ${APIStateDates[lastUpdate][\"delta\"]}`\r\n      );\r\n      const {\r\n        confirmed: dailyConfirm,\r\n        deceased: dailyDeceased,\r\n        recovered: dailyRecovered,\r\n        tested: dailyTested,\r\n      } = APIStateDates[lastUpdate][\"delta\"]\r\n        ? APIStateDates[lastUpdate][\"delta\"]\r\n        : { confirmed: null, deceased: null, recovered: null, tested: null };\r\n\r\n      return {\r\n        confirmed,\r\n        recovered,\r\n        deaths: deceased,\r\n        lastUpdate,\r\n        dailyConfirm,\r\n        dailyDeceased,\r\n        dailyRecovered,\r\n        dailyTested,\r\n      };\r\n    } else {\r\n      const {\r\n        data: { confirmed, recovered, deaths, lastUpdate },\r\n      } = await axios.get(urlIndiaTotalData);\r\n\r\n      return {\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","\r\nexport const STATE_NAMES = {\r\n    AP: 'Andhra Pradesh',\r\n    AR: 'Arunachal Pradesh',\r\n    AS: 'Assam',\r\n    BR: 'Bihar',\r\n    CT: 'Chhattisgarh',\r\n    GA: 'Goa',\r\n    GJ: 'Gujarat',\r\n    HR: 'Haryana',\r\n    HP: 'Himachal Pradesh',\r\n    JH: 'Jharkhand',\r\n    KA: 'Karnataka',\r\n    KL: 'Kerala',\r\n    MP: 'Madhya Pradesh',\r\n    MH: 'Maharashtra',\r\n    MN: 'Manipur',\r\n    ML: 'Meghalaya',\r\n    MZ: 'Mizoram',\r\n    NL: 'Nagaland',\r\n    OR: 'Odisha',\r\n    PB: 'Punjab',\r\n    RJ: 'Rajasthan',\r\n    SK: 'Sikkim',\r\n    TN: 'Tamil Nadu',\r\n    TG: 'Telangana',\r\n    TR: 'Tripura',\r\n    UT: 'Uttarakhand',\r\n    UP: 'Uttar Pradesh',\r\n    WB: 'West Bengal',\r\n    AN: 'Andaman and Nicobar Islands',\r\n    CH: 'Chandigarh',\r\n    DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n    DL: 'Delhi',\r\n    JK: 'Jammu and Kashmir',\r\n    LA: 'Ladakh',\r\n    LD: 'Lakshadweep',\r\n    PY: 'Puducherry',\r\n    TT: 'India',\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData, fetchIndiaData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { STATE_NAMES } from \"../../constants\";\r\n\r\nconst Chart = ({\r\n  data: { confirmed, deaths, recovered },\r\n  country,\r\n  IndState,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [dailyIndiaData, setDailyIndiaData] = useState([]);\r\n\r\n  //you cannot create async function using useEffect since its synchronous for race conditions so create another function inside the useEffect\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    const fetchIndiaAPI = async () => {\r\n      console.log(`India Daily data`);\r\n      setDailyIndiaData(await fetchIndiaData());\r\n    };\r\n    IndState ? fetchIndiaAPI() : fetchAPI();\r\n  }, []); //without [] -> empty array dependency useEffect will keep o running with [] it will only run once like componentDidMount\r\n\r\n  //have two charts\r\n  const lineChart =\r\n    //for global data\r\n    dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0,0,0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"#99f2c8\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: country\r\n              ? [confirmed.value, recovered.value, deaths.value]\r\n              : [confirmed, recovered, deaths],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: `Current State in ${country || STATE_NAMES[IndState]}`,\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <Grid className={styles.container}>\r\n      {country || IndState ? barChart : lineChart}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\nconst Cards = ({\r\n  data: {\r\n    confirmed,\r\n    recovered,\r\n    deaths,\r\n    lastUpdate,\r\n    dailyConfirm,\r\n    dailyDeceased,\r\n    dailyRecovered,\r\n    dailyTested,\r\n  },\r\n  country,\r\n  IndState,\r\n}) => {\r\n  console.log(dailyConfirm);\r\n  if (!confirmed) {\r\n    return \"Loading ...\";\r\n  }\r\n  return (\r\n    <Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.infected)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"#99f2c8\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Infected\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? confirmed : confirmed.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}{\" \"}\r\n            {dailyConfirm ? <b>&#8593; {dailyConfirm} </b> : \"\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Number of active cases of Covid 19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.recovered)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"rgba(0, 255, 0, 0.5)\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Recovered\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? recovered : recovered.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}{\" \"}\r\n            {dailyRecovered ? <b>&#8593; {dailyRecovered} </b> : \"\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Number of recoveries from Covid 19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.deaths)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"#c31432\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Deaths\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? deaths : deaths.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}{\" \"}\r\n            {dailyDeceased ? <b>&#8593; {dailyDeceased} </b> : \"\"}\r\n          </Typography>\r\n          <Typography variant=\"body2\">Number of deaths Covid 19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries, fetchIndiaStates } from \"../../api\";\r\nimport { STATE_NAMES } from \"../../constants\";\r\n\r\nconst CountryPicker = ({ handleCountryChange, handleStateChange, Region }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  const [fetchedIndiaStates, setFetchedIndiaStates] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      Region === \"IndiaStats\"\r\n        ? setFetchedIndiaStates(await fetchIndiaStates())\r\n        : setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries, setFetchedIndiaStates]); //second parameter coz: useEffect will run endlessly without second params, after passing second params useEffect will run only when setFetchCountries is changed )\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      {Region === \"IndiaStats\" ? (\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleStateChange(e.target.value)}\r\n        >\r\n          <option value=\"\">India</option>\r\n          {fetchedIndiaStates.map((state, i) => {\r\n            if (state !== \"UN\" && state !== \"TT\")\r\n              return (\r\n                <option key={i} value={state}>\r\n                  {STATE_NAMES[state]}\r\n                </option>\r\n              );\r\n          })}\r\n        </NativeSelect>\r\n      ) : (\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\n\r\nimport { Cards, Chart, CountryPicker} from '../../components'\r\n\r\nimport styles from './GlobalStats.module.css'\r\nimport { fetchData } from '../../api'\r\n\r\nconst GlobalStats = () => {\r\n\r\n    const [data, setData] = useState({});\r\n    const [country, setCountry]= useState(\"\");\r\n    \r\n    const handleCountryChange = async(country)   =>  {\r\n        //fetch the data\r\n        const fetchedData= await fetchData(country)\r\n        console.log(fetchedData);\r\n        setData(fetchedData)\r\n        setCountry(country)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async() =>{\r\n            setData(await fetchData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[])\r\n        \r\n        \r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n                <CountryPicker handleCountryChange={handleCountryChange}/>\r\n                <Grid container>\r\n                    <Cards data={data} country={country}/>\r\n                    <Chart data={data} country={country}/>\r\n                </Grid>                \r\n            </div>\r\n        )\r\n    \r\n};\r\n\r\nexport default GlobalStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"..\";\r\n\r\nimport styles from \"./IndiaStats.module.css\";\r\nimport { fetchIndiaData } from \"../../api\";\r\n\r\nconst IndiaStats = () => {\r\n  const [data, setData] = useState({});\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const handleStateChange = async (state) => {\r\n    //fetch the data\r\n    const fetchedData = await fetchIndiaData(state);\r\n    console.log(fetchedData);\r\n    setData(fetchedData);\r\n    setState(state);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setData(await fetchIndiaData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <CountryPicker\r\n        handleStateChange={handleStateChange}\r\n        Region={\"IndiaStats\"}\r\n      />\r\n      <Grid container>\r\n        <Cards data={data} IndState={state} />\r\n        <Chart data={data} IndState={state} />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndiaStats;\r\n","export default __webpack_public_path__ + \"static/media/corona.46957fb8.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport \"./Menu.css\";\r\n\r\nimport coronaImage from \"../../images/corona.jpg\";\r\n\r\nimport styles from \"./Menu.css\";\r\n\r\nconst Menu = (props) => {\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const [optionClicked, setOptionClicked] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n\r\n  const setClassNames = (num) => {\r\n    const classArr = [\"m-item\"];\r\n    if (openMenu) classArr.push(`open-${num}`);\r\n\r\n    return classArr.join(\" \");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentRoute = window.location.pathname;\r\n    currentRoute === \"/\" || currentRoute === \"/Covid19-data-visualizer\"\r\n      ? setOptionClicked(false)\r\n      : setOptionClicked(true);\r\n  }, []);\r\n\r\n  const pushToRoute = (routeTopush) => {\r\n    props.history.push(routeTopush);\r\n    setOpenMenu(false);\r\n\r\n    routeTopush === \"/\" || routeTopush === \"/Covid19-data-visualizer\"\r\n      ? setOptionClicked(false)\r\n      : setOptionClicked(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={optionClicked ? \"MenuRight\" : \"Menu\"}>\r\n        <div className={\"m-item m-logo\"} onClick={() => setOpenMenu(!openMenu)}>\r\n          <img\r\n            style={{ width: \"50px\", marginTop: \"5px\" }}\r\n            alt=\"COVID-19\"\r\n            src={coronaImage}\r\n          />\r\n        </div>\r\n        <div\r\n          className={setClassNames(1)}\r\n          onClick={() => pushToRoute(\"/Covid19-data-visualizer/IndiaStats\")}\r\n        >\r\n          India Stats\r\n        </div>\r\n        <div\r\n          className={setClassNames(2)}\r\n          onClick={() => pushToRoute(\"/Covid19-data-visualizer/GlobalStats\")}\r\n        >\r\n          World Stats\r\n        </div>\r\n        <div\r\n          className={setClassNames(3)}\r\n          onClick={() => pushToRoute(\"/Covid19-data-visualizer\")}\r\n        >\r\n          Clear\r\n        </div>\r\n        <div className={setClassNames(4)}>\r\n          <DarkModeToggle\r\n            onChange={setIsDarkMode}\r\n            checked={isDarkMode}\r\n            size={80}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Menu);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\n\r\nimport GlobalStats from \"./components/GlobalStats/GlobalStats\";\r\nimport IndiaStats from \"./components/IndiaStats/IndiaStats\";\r\nimport Menu from \"./components/Menu/Menu\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nimport coronaImage from \"./images/corona.jpg\";\r\n\r\nconst App = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n  return (\r\n    <BrowserRouter className={styles.container}>\r\n      <div\r\n        className=\"App\"\r\n        style={{ justifyContent: \"center\", flexDirection: \"column\" }}\r\n      >\r\n        <Menu />\r\n\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/Covid19-data-visualizer/GlobalStats\"\r\n            component={GlobalStats}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/Covid19-data-visualizer/IndiaStats\"\r\n            component={IndiaStats}\r\n          />\r\n          <Route path=\"/\" component={null} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\" ;\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}