{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/GlobalStats/GlobalStats.module.css","components/IndiaStats/IndiaStats.module.css","App.module.css","components/Cards/Cards.module.css","api/index.js","constants.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/GlobalStats/GlobalStats.jsx","components/IndiaStats/IndiaStats.jsx","images/corona.jpg","components/Menu/Menu.js","App.js","webpack:///./src/index.js?b635"],"names":["module","exports","url","urlIndiaTotalData","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","error","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","log","name","fetchIndiaStates","localStorage","setItem","JSON","stringify","Object","keys","stateCode","fetchIndiaData","state","INDdataInStorage","parse","getItem","APIStateDates","length","deceased","tested","STATE_NAMES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","TT","Chart","IndState","useState","setDailyData","setDailyIndiaData","useEffect","fetchAPI","fetchIndiaAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","Grid","className","styles","container","Cards","item","component","Card","xs","cx","card","infected","CardContent","style","Typography","color","gutterBottom","variant","start","end","duration","seperator","Date","toDateString","CountryPicker","handleCountryChange","handleStateChange","Region","fetchedCountries","setFetchedCountries","fetchedIndiaStates","setFetchedIndiaStates","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","GlobalStats","setData","setCountry","fetchedData","IndiaStats","setState","withRouter","props","openMenu","setOpenMenu","optionClicked","setOptionClicked","isDarkMode","setIsDarkMode","setClassNames","num","classArr","push","join","currentRoute","window","location","pathname","pushToRoute","routeTopush","history","onClick","width","marginTop","alt","src","coronaImage","checked","size","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d44f31b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2dVLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2lHwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GlobalStats_container__1q5Pi\",\"image\":\"GlobalStats_image__1iOU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IndiaStats_container__3z5hb\",\"image\":\"IndiaStats_image__27X_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___FWUB\",\"image\":\"App_image__3fEfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1SgbK\",\"card\":\"Cards_card__18VTY\",\"infected\":\"Cards_infected__33UAh\",\"recovered\":\"Cards_recovered__J-HP2\",\"deaths\":\"Cards_deaths__9LS0D\"};","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nconst urlIndiaTotalData = `${url}/countries/India`;\r\nconst urlIndiaStatesData = `https://api.covid19india.org/v4/min/timeseries.min.json`;\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {\r\n    console.error(`Error while fetching data ${error}`);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    console.log(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchIndiaStates = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${urlIndiaStatesData}`);\r\n\r\n    localStorage.setItem(\"IndiaStats\", JSON.stringify(data));\r\n\r\n    return Object.keys(data).map((stateCode) => stateCode);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const fetchIndiaData = async (state) => {\r\n  try {\r\n    if (state) {\r\n      console.log(\"State selected \" + state);\r\n      const INDdataInStorage = JSON.parse(localStorage.getItem(\"IndiaStats\"));\r\n\r\n      const APIStateDates = INDdataInStorage[state][\"dates\"];\r\n      const keys = Object.keys(APIStateDates);\r\n      const lastUpdate = keys[keys.length - 1];\r\n\r\n      console.log(APIStateDates[lastUpdate][\"total\"]);\r\n      const { confirmed, deceased, recovered, tested } = APIStateDates[\r\n        lastUpdate\r\n      ][\"total\"];\r\n\r\n      console.log(confirmed);\r\n\r\n      return { confirmed, recovered, deaths: deceased, lastUpdate };\r\n    } else {\r\n      const {\r\n        data: { confirmed, recovered, deaths, lastUpdate },\r\n      } = await axios.get(urlIndiaTotalData);\r\n\r\n      return {\r\n        confirmed,\r\n        recovered,\r\n        deaths,\r\n        lastUpdate,\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","\r\nexport const STATE_NAMES = {\r\n    AP: 'Andhra Pradesh',\r\n    AR: 'Arunachal Pradesh',\r\n    AS: 'Assam',\r\n    BR: 'Bihar',\r\n    CT: 'Chhattisgarh',\r\n    GA: 'Goa',\r\n    GJ: 'Gujarat',\r\n    HR: 'Haryana',\r\n    HP: 'Himachal Pradesh',\r\n    JH: 'Jharkhand',\r\n    KA: 'Karnataka',\r\n    KL: 'Kerala',\r\n    MP: 'Madhya Pradesh',\r\n    MH: 'Maharashtra',\r\n    MN: 'Manipur',\r\n    ML: 'Meghalaya',\r\n    MZ: 'Mizoram',\r\n    NL: 'Nagaland',\r\n    OR: 'Odisha',\r\n    PB: 'Punjab',\r\n    RJ: 'Rajasthan',\r\n    SK: 'Sikkim',\r\n    TN: 'Tamil Nadu',\r\n    TG: 'Telangana',\r\n    TR: 'Tripura',\r\n    UT: 'Uttarakhand',\r\n    UP: 'Uttar Pradesh',\r\n    WB: 'West Bengal',\r\n    AN: 'Andaman and Nicobar Islands',\r\n    CH: 'Chandigarh',\r\n    DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n    DL: 'Delhi',\r\n    JK: 'Jammu and Kashmir',\r\n    LA: 'Ladakh',\r\n    LD: 'Lakshadweep',\r\n    PY: 'Puducherry',\r\n    TT: 'India',\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData, fetchIndiaData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { STATE_NAMES } from \"../../constants\";\r\n\r\nconst Chart = ({\r\n  data: { confirmed, deaths, recovered },\r\n  country,\r\n  IndState,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [dailyIndiaData, setDailyIndiaData] = useState([]);\r\n\r\n  //you cannot create async function using useEffect since its synchronous for race conditions so create another function inside the useEffect\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    const fetchIndiaAPI = async () => {\r\n      console.log(`India Daily data`);\r\n      setDailyIndiaData(await fetchIndiaData());\r\n    };\r\n    IndState ? fetchIndiaAPI() : fetchAPI();\r\n  }, []); //without [] -> empty array dependency useEffect will keep o running with [] it will only run once like componentDidMount\r\n\r\n  //have two charts\r\n  const lineChart =\r\n    //for global data\r\n    dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255, 0,0,0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"#99f2c8\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: country\r\n              ? [confirmed.value, recovered.value, deaths.value]\r\n              : [confirmed, recovered, deaths],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: `Current State in ${country || STATE_NAMES[IndState]}`,\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <Grid className={styles.container}>\r\n      {country || IndState ? barChart : lineChart}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nimport styles from \"./Cards.module.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\nconst Cards = ({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n  country,\r\n  IndState,\r\n}) => {\r\n  if (!confirmed) {\r\n    return \"Loading ...\";\r\n  }\r\n  return (\r\n    <Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.infected)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"#99f2c8\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Infected\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? confirmed : confirmed.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Number of active cases of Covid 19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.recovered)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"rgba(0, 255, 0, 0.5)\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Recovered\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? recovered : recovered.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            Number of recoveries from Covid 19\r\n          </Typography>\r\n        </CardContent>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        component={Card}\r\n        xs={12}\r\n        className={cx(styles.card, styles.deaths)}\r\n      >\r\n        <CardContent style={{ backgroundColor: \"#c31432\" }}>\r\n          <Typography color=\"textSecondary\" gutterBottom>\r\n            Deaths\r\n          </Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={IndState ? deaths : deaths.value}\r\n              duration={2.5}\r\n              seperator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">\r\n            {new Date(lastUpdate).toDateString()}\r\n          </Typography>\r\n          <Typography variant=\"body2\">Number of deaths Covid 19</Typography>\r\n        </CardContent>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries, fetchIndiaStates } from \"../../api\";\r\nimport { STATE_NAMES } from \"../../constants\";\r\n\r\nconst CountryPicker = ({ handleCountryChange, handleStateChange, Region }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n  const [fetchedIndiaStates, setFetchedIndiaStates] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      Region === \"IndiaStats\"\r\n        ? setFetchedIndiaStates(await fetchIndiaStates())\r\n        : setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries, setFetchedIndiaStates]); //second parameter coz: useEffect will run endlessly without second params, after passing second params useEffect will run only when setFetchCountries is changed )\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      {Region === \"IndiaStats\" ? (\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleStateChange(e.target.value)}\r\n        >\r\n          <option value=\"\">India</option>\r\n          {fetchedIndiaStates.map((state, i) => {\r\n            if (state !== \"UN\" && state !== \"TT\")\r\n              return (\r\n                <option key={i} value={state}>\r\n                  {STATE_NAMES[state]}\r\n                </option>\r\n              );\r\n          })}\r\n        </NativeSelect>\r\n      ) : (\r\n        <NativeSelect\r\n          defaultValue=\"\"\r\n          onChange={(e) => handleCountryChange(e.target.value)}\r\n        >\r\n          <option value=\"\">Global</option>\r\n          {fetchedCountries.map((country, i) => (\r\n            <option key={i} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </NativeSelect>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\n\r\nimport { Cards, Chart, CountryPicker} from '../../components'\r\n\r\nimport styles from './GlobalStats.module.css'\r\nimport { fetchData } from '../../api'\r\n\r\nconst GlobalStats = () => {\r\n\r\n    const [data, setData] = useState({});\r\n    const [country, setCountry]= useState(\"\");\r\n    \r\n    const handleCountryChange = async(country)   =>  {\r\n        //fetch the data\r\n        const fetchedData= await fetchData(country)\r\n        console.log(fetchedData);\r\n        setData(fetchedData)\r\n        setCountry(country)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async() =>{\r\n            setData(await fetchData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[])\r\n        \r\n        \r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n                <CountryPicker handleCountryChange={handleCountryChange}/>\r\n                <Grid container>\r\n                    <Cards data={data} country={country}/>\r\n                    <Chart data={data} country={country}/>\r\n                </Grid>                \r\n            </div>\r\n        )\r\n    \r\n};\r\n\r\nexport default GlobalStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"..\";\r\n\r\nimport styles from \"./IndiaStats.module.css\";\r\nimport { fetchIndiaData } from \"../../api\";\r\n\r\nconst IndiaStats = () => {\r\n  const [data, setData] = useState({});\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const handleStateChange = async (state) => {\r\n    //fetch the data\r\n    const fetchedData = await fetchIndiaData(state);\r\n    console.log(fetchedData);\r\n    setData(fetchedData);\r\n    setState(state);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setData(await fetchIndiaData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <CountryPicker\r\n        handleStateChange={handleStateChange}\r\n        Region={\"IndiaStats\"}\r\n      />\r\n      <Grid container>\r\n        <Cards data={data} IndState={state} />\r\n        <Chart data={data} IndState={state} />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndiaStats;\r\n","export default __webpack_public_path__ + \"static/media/corona.46957fb8.jpg\";","import React, {useState, useEffect} from \"react\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport './Menu.css';\r\n\r\nimport coronaImage from '../../images/corona.jpg'\r\n\r\nconst Menu = (props) => {\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n    const [optionClicked, setOptionClicked] = useState(false);\r\n    const [isDarkMode, setIsDarkMode] = useState(() => false);  \r\n       \r\n    const setClassNames = num => {\r\n        const classArr = [\"m-item\"];\r\n        if(openMenu) classArr.push(`open-${num}`);\r\n \r\n        return classArr.join(' ')\r\n    }\r\n\r\n    \r\n    useEffect(()=> {\r\n        const currentRoute= window.location.pathname\r\n        currentRoute===\"/\" ? setOptionClicked(false) : setOptionClicked(true);\r\n    },[])\r\n\r\n    const pushToRoute = (routeTopush) => {\r\n        props.history.push(routeTopush);\r\n        setOpenMenu(false);\r\n\r\n        routeTopush===\"/\"? setOptionClicked(false) : setOptionClicked(true)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={optionClicked ? \"MenuRight\": \"Menu\"}>\r\n            <div className={\"m-item m-logo\"}\r\n                onClick={() => setOpenMenu(!openMenu)}>\r\n                <img style={{width: \"50px\",\r\n                    marginTop: \"5px\"}} alt=\"COVID-19\" src={coronaImage} />\r\n            </div>\r\n            <div className={setClassNames(1)}\r\n                onClick={() => pushToRoute(\"/IndiaStats\")}>\r\n                India Stats\r\n            </div>\r\n            <div className={setClassNames(2)}\r\n                onClick={() => pushToRoute(\"/GlobalStats\")}>\r\n                Global Stats\r\n            </div>\r\n            <div className={setClassNames(3)}\r\n                onClick={() => pushToRoute(\"/\")}>\r\n                Sign out\r\n            </div>\r\n            <div className={setClassNames(4)}>\r\n                <DarkModeToggle\r\n                    onChange={setIsDarkMode}\r\n                    checked={isDarkMode}\r\n                    size={80}\r\n                    />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Menu);","import React,{useState, useEffect} from \"react\";\r\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\n\r\nimport GlobalStats from './components/GlobalStats/GlobalStats';\r\nimport IndiaStats from './components/IndiaStats/IndiaStats';\r\nimport Menu from './components/Menu/Menu'\r\n\r\nimport styles from './App.module.css'\r\n\r\nimport coronaImage from './images/corona.jpg'\r\n\r\nconst App = () => {\r\n        \r\n        const [isDarkMode, setIsDarkMode] = useState(() => false);     \r\n        return (\r\n            <BrowserRouter className={styles.container}>\r\n                \r\n                <div className=\"App\">\r\n                    <Menu/>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/GlobalStats\" component={GlobalStats} />\r\n                        <Route exact path=\"/IndiaStats\" component={IndiaStats} />\r\n                        <Route  path=\"/\" component={null} />\r\n                    </Switch>\r\n                </div>\r\n\r\n            </BrowserRouter>\r\n        )\r\n    \r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\" ;\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}